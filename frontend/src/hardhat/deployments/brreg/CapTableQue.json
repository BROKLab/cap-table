{
  "address": "0xFD6F7A6a5c21A3f503EBaE7a473639974379c351",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "controllers",
          "type": "address[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "capTable",
          "type": "address"
        }
      ],
      "name": "qued",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "capTable",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "status",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "reason",
          "type": "bytes32"
        }
      ],
      "name": "statusUpdate",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "adr",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "uuid",
          "type": "bytes32"
        }
      ],
      "name": "add",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "controllers",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRegistry",
      "outputs": [
        {
          "internalType": "address",
          "name": "capTableRegistry",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "adr",
          "type": "address"
        }
      ],
      "name": "getStatus",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "adr",
          "type": "address"
        }
      ],
      "name": "info",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "status",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "uuid",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "adr",
          "type": "address"
        }
      ],
      "name": "isController",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "list",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "capTableList",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "listApproved",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "capTableList",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "listDeclined",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "capTableList",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "listQued",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "capTableList",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "adr",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        },
        {
          "internalType": "bytes32",
          "name": "reason",
          "type": "bytes32"
        }
      ],
      "name": "process",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "operators",
          "type": "address[]"
        }
      ],
      "name": "setControllers",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "adr",
          "type": "address"
        }
      ],
      "name": "setRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x2201826db71d83b99b82f21554b4650e8db56ce3bdf1504c519583976fac7368",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xFD6F7A6a5c21A3f503EBaE7a473639974379c351",
    "transactionIndex": 0,
    "gasUsed": "842987",
    "logsBloom": "0x
    "blockHash": "0x4b5f30abf91c44d7231e46f49ce01a82734f0f8db17a12878ca4860798518c9b",
    "transactionHash": "0x2201826db71d83b99b82f21554b4650e8db56ce3bdf1504c519583976fac7368",
    "logs": [],
    "blockNumber": 745299,
    "cumulativeGasUsed": "842987",
    "status": 1,
    "byzantium": true
  },
  "args": [
    [
      "0xC9901c379E672912D86D12Cb8f182cFaf5951940",
      "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266"
    ]
  ],
  "solcInputHash": "0323fa2fb9410fe7dd170edc9a4551e7",
  "metadata": "{\"compiler\":{\"version\":\"0.7.3+commit.9bfce1f6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"controllers\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"capTable\",\"type\":\"address\"}],\"name\":\"qued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"capTable\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"status\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"reason\",\"type\":\"bytes32\"}],\"name\":\"statusUpdate\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"uuid\",\"type\":\"bytes32\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"capTableRegistry\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"getStatus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"info\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"status\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"uuid\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"isController\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"list\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"capTableList\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listApproved\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"capTableList\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listDeclined\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"capTableList\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listQued\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"capTableList\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"reason\",\"type\":\"bytes32\"}],\"name\":\"process\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"operators\",\"type\":\"address[]\"}],\"name\":\"setControllers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"setRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/capTable/CapTableQue.sol\":\"CapTableQue\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":50},\"remappings\":[]},\"sources\":{\"contracts/capTable/CapTableQue.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.5;\\n\\nimport \\\"./Controllable.sol\\\";\\nimport \\\"./CapTableRegistry.sol\\\";\\n\\ncontract CapTableQue is Controllable {\\n    uint256 internal _quedCount;\\n    uint256 internal _approvedCount;\\n    uint256 internal _declinedCount;\\n    address[] internal _capTablesQue;\\n    mapping(address => uint256) internal _capTableStatus; // 0:not used 1:qued 2:approved 3:declined\\n    CapTableRegistry internal _CAP_TABLE_REGISTRY;\\n    mapping(address => bytes32) internal _capTableUuid;\\n\\n    event qued(address indexed capTable);\\n    event statusUpdate(\\n        address indexed capTable,\\n        uint256 status,\\n        bytes32 reason\\n    );\\n\\n    constructor(address[] memory controllers)\\n        Controllable(controllers)\\n    {}\\n\\n    function setRegistry(address adr) external {\\n        require(isController(msg.sender), \\\"msg.sender not controller\\\");\\n        _CAP_TABLE_REGISTRY = CapTableRegistry(adr);\\n    }\\n\\n    function getRegistry() external view returns (address capTableRegistry) {\\n        return address(_CAP_TABLE_REGISTRY);\\n    }\\n\\n    function add(address adr, bytes32 uuid) external {\\n        require(adr != address(0), \\\"No empty address\\\");\\n        require(\\n            _capTableStatus[adr] == uint256(0),\\n            \\\"Can only que address one-time\\\"\\n        );\\n        _capTablesQue.push(adr);\\n        _quedCount++;\\n        _capTableStatus[adr] = 1;\\n        _capTableUuid[adr] = uuid;\\n        emit qued(adr);\\n    }\\n\\n    function process(\\n        address adr,\\n        bool approved,\\n        bytes32 reason\\n    ) external {\\n        // require(adr != address(0), \\\"No empty address\\\");\\n        // require(isController(msg.sender), \\\"msg.sender not controller\\\");\\n        // require(_capTableStatus[adr] == 1, \\\"Must be in que to process\\\");\\n        _quedCount--;\\n\\n        if (approved) {\\n            _CAP_TABLE_REGISTRY.add(adr, _capTableUuid[adr]);\\n            _approvedCount++;\\n            _capTableStatus[adr] = 2;\\n        } else {\\n            _declinedCount++;\\n            _capTableStatus[adr] = 3;\\n        }\\n        uint256 status = approved ? 2 : 3;\\n        emit statusUpdate(adr, status, reason);\\n    }\\n\\n    function getStatus(address adr) external view returns (uint256) {\\n        return _capTableStatus[adr];\\n    }\\n\\n    function info(address adr) external view returns (uint256 status, bytes32 uuid) {\\n        return (_capTableStatus[adr],_capTableUuid[adr] );\\n    }\\n\\n    function list() external view returns (address[] memory capTableList) {\\n        return _capTablesQue;\\n    }\\n\\n    function listQued() external view returns (address[] memory capTableList) {\\n        address[] memory capTableAddressArray = new address[](_quedCount);\\n        uint256 indexForCapTableAddressArray;\\n        for (uint256 i = 0; i < _capTablesQue.length; i++) {\\n            if (_capTableStatus[_capTablesQue[i]] == 1) {\\n                capTableAddressArray[indexForCapTableAddressArray] = _capTablesQue[i];\\n                indexForCapTableAddressArray++;\\n            }\\n        }\\n        return capTableAddressArray;\\n    }\\n\\n    function listApproved()\\n        external\\n        view\\n        returns (address[] memory capTableList)\\n    {\\n        address[] memory capTableAddressArray = new address[](_approvedCount);\\n        uint256 indexForCapTableAddressArray;\\n        for (uint256 i = 0; i < _capTablesQue.length; i++) {\\n            if (_capTableStatus[_capTablesQue[i]] == 2) {\\n                capTableAddressArray[indexForCapTableAddressArray] = _capTablesQue[i];\\n                indexForCapTableAddressArray++;\\n            }\\n        }\\n        return capTableAddressArray;\\n    }\\n\\n    function listDeclined()\\n        external\\n        view\\n        returns (address[] memory capTableList)\\n    {\\n        address[] memory capTableAddressArray = new address[](_declinedCount);\\n        uint256 indexForCapTableAddressArray;\\n        for (uint256 i = 0; i < _capTablesQue.length; i++) {\\n            if (_capTableStatus[_capTablesQue[i]] == 3) {\\n                capTableAddressArray[indexForCapTableAddressArray] = _capTablesQue[i];\\n                indexForCapTableAddressArray++;\\n            }\\n        }\\n        return capTableAddressArray;\\n    }\\n}\\n\",\"keccak256\":\"0xb5a6240feb4525bd58d720cc51dacac58309d2084bfb97dd75b3ea82db1748e8\",\"license\":\"MIT\"},\"contracts/capTable/CapTableRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.5.5;\\n\\nimport \\\"./Controllable.sol\\\";\\n\\ncontract CapTableRegistry is Controllable {\\n    address[] internal _capTables;\\n    mapping(address => bool) internal _active;\\n    mapping(address => bytes32) internal _addressToUuid;\\n    mapping(bytes32 => address) internal _uuidToAddress;\\n    uint256 internal _activeCapTables;\\n\\n    event capTableAdded(address indexed capTableAddress);\\n    event capTableRemoved(address indexed capTableRemoved);\\n\\n    constructor(address[] memory controllers)\\n        Controllable(controllers)\\n    {}\\n\\n    function add(address adr, bytes32 uuid) external {\\n        _addCapTable(adr, uuid);\\n    }\\n\\n    function remove(address adr) external {\\n        _removeCapTable(adr);\\n    }\\n\\n    function list() external view returns (address[] memory capTableList) {\\n        return _capTables;\\n    }\\n\\n    function info(address adr) external view returns (bytes32 uuid, bool active){\\n        return (_addressToUuid[adr],_active[adr]);\\n    }\\n    function listActive()\\n        external\\n        view\\n        returns (address[] memory capTableList)\\n    {\\n        require(_activeCapTables > 0, \\\"CapTable list is empty\\\");\\n        address[] memory capTableAddressArray = new address[](_activeCapTables);\\n        uint256 indexForCapTableAddressArray;\\n        for (uint256 i = 0; i < _capTables.length; i++) {\\n            if (_active[_capTables[i]]) {\\n                capTableAddressArray[indexForCapTableAddressArray] = _capTables[i];\\n                indexForCapTableAddressArray++;\\n            }\\n        }\\n        return capTableAddressArray;\\n    }\\n\\n    function _addCapTable(address adr, bytes32 uuid) internal {\\n        require(isController(msg.sender), \\\"msg.sender not controller\\\");\\n        _capTables.push(adr);\\n        _active[adr] = true;\\n        _addressToUuid[adr] = uuid;\\n        _uuidToAddress[uuid] = adr;\\n        _activeCapTables++;\\n        emit capTableAdded(adr);\\n    }\\n\\n    function _removeCapTable(address adr) internal {\\n        require(isController(msg.sender), \\\"msg.sender not controller\\\");\\n        bytes32 uuid = _addressToUuid[adr];\\n        _active[adr] = false;\\n        _addressToUuid[adr] = bytes32(0);\\n        _uuidToAddress[uuid] = address(0);\\n        _activeCapTables--;\\n        emit capTableRemoved(adr);\\n    }\\n}\\n\",\"keccak256\":\"0xd59c49358415f00a469d6fa1de45ddad245ddcd563561b83fd2e3a043b9e9128\",\"license\":\"MIT\"},\"contracts/capTable/Controllable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.5.5;\\n\\n\\ncontract Controllable {\\n    address[] internal _controllers;\\n    mapping(address => bool) internal _isController;\\n\\n    constructor(address[] memory controllers) {\\n        _setControllers(controllers);\\n    }\\n\\n    function controllers() external view returns (address[] memory) {\\n        return _controllers;\\n    }\\n\\n    function setControllers(address[] calldata operators) external {\\n        require(isController(msg.sender), \\\"msg.sender not controller\\\");\\n        _setControllers(operators);\\n    }\\n\\n    function isController(address adr) public view returns (bool) {\\n        return _isController[adr];\\n    }\\n\\n    function _setControllers(address[] memory adresses) internal {\\n        for (uint256 i = 0; i < _controllers.length; i++) {\\n            _isController[_controllers[i]] = false;\\n        }\\n        for (uint256 j = 0; j < adresses.length; j++) {\\n            _isController[adresses[j]] = true;\\n        }\\n        _controllers = adresses;\\n    }\\n}\\n\",\"keccak256\":\"0x458d41a972afd5f83506d05f1d50c75110cf4277285cb2e4c86b100d6b4ef170\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162000e7838038062000e78833981810160405260208110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82518660208202830111640100000000821117156200008c57600080fd5b82525081516020918201928201910280838360005b83811015620000bb578181015183820152602001620000a1565b5050505090500160405250505080620000da81620000e260201b60201c565b505062000236565b60005b60005481101562000140576000600160008084815481106200010357fe5b6000918252602080832091909101546001600160a01b031683528201929092526040019020805460ff1916911515919091179055600101620000e5565b5060005b81518110156200019b5760018060008484815181106200016057fe5b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905560010162000144565b508051620001b1906000906020840190620001b5565b5050565b8280548282559060005260206000209081019282156200020d579160200282015b828111156200020d57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190620001d6565b506200021b9291506200021f565b5090565b5b808211156200021b576000815560010162000220565b610c3280620002466000396000f3fe608060405234801561001057600080fd5b50600436106100af5760003560e01c80630253889b146100b45780630aae7a6b1461010c5780630f560cd71461014b5780632d580ef61461015357806330ccebb5146101815780635ab1bd53146101b95780637cc0c3a7146101dd578063a91ee0dc146101e5578063ad3c98771461020b578063b2d82f3414610213578063b429afeb14610247578063bc6af08d14610281578063ea74838a14610289575b600080fd5b6100bc6102f7565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156100f85781810151838201526020016100e0565b505050509050019250505060405180910390f35b6101326004803603602081101561012257600080fd5b50356001600160a01b03166103f2565b6040805192835260208301919091528051918290030190f35b6100bc61041a565b61017f6004803603604081101561016957600080fd5b506001600160a01b03813516906020013561047c565b005b6101a76004803603602081101561019757600080fd5b50356001600160a01b03166105d1565b60408051918252519081900360200190f35b6101c16105ec565b604080516001600160a01b039092168252519081900360200190f35b6100bc6105fb565b61017f600480360360208110156101fb57600080fd5b50356001600160a01b031661065b565b6100bc6106d3565b61017f6004803603606081101561022957600080fd5b506001600160a01b03813516906020810135151590604001356107c6565b61026d6004803603602081101561025d57600080fd5b50356001600160a01b0316610901565b604080519115158252519081900360200190f35b6100bc61091f565b61017f6004803603602081101561029f57600080fd5b810190602081018135600160201b8111156102b957600080fd5b8201836020820111156102cb57600080fd5b803590602001918460208302840111600160201b831117156102ec57600080fd5b509092509050610a12565b60608060045467ffffffffffffffff8111801561031357600080fd5b5060405190808252806020026020018201604052801561033d578160200160208202803683370190505b5090506000805b6005548110156103ea57600660006005838154811061035f57fe5b60009182526020808320909101546001600160a01b03168352820192909252604001902054600314156103e2576005818154811061039957fe5b9060005260206000200160009054906101000a90046001600160a01b03168383815181106103c357fe5b6001600160a01b03909216602092830291909101909101526001909101905b600101610344565b509091505090565b6001600160a01b03166000908152600660209081526040808320546008909252909120549091565b6060600580548060200260200160405190810160405280929190818152602001828054801561047257602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610454575b5050505050905090565b6001600160a01b0382166104ca576040805162461bcd60e51b815260206004820152601060248201526f4e6f20656d707479206164647265737360801b604482015290519081900360640190fd5b6001600160a01b03821660009081526006602052604090205415610535576040805162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79207175652061646472657373206f6e652d74696d65000000604482015290519081900360640190fd5b6005805460018082019092557f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b0319166001600160a01b038516908117909155600280548301905560008181526006602090815260408083209490945560089052828120849055915190917fbc9b6517be6d16ed0bc17e7515e875bd133a96ecc708f0a71541b26a13979f6b91a25050565b6001600160a01b031660009081526006602052604090205490565b6007546001600160a01b031690565b60606000805480602002602001604051908101604052809291908181526020018280548015610472576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610454575050505050905090565b61066433610901565b6106b1576040805162461bcd60e51b815260206004820152601960248201527836b9b39739b2b73232b9103737ba1031b7b73a3937b63632b960391b604482015290519081900360640190fd5b600780546001600160a01b0319166001600160a01b0392909216919091179055565b60608060025467ffffffffffffffff811180156106ef57600080fd5b50604051908082528060200260200182016040528015610719578160200160208202803683370190505b5090506000805b6005548110156103ea57600660006005838154811061073b57fe5b60009182526020808320909101546001600160a01b03168352820192909252604001902054600114156107be576005818154811061077557fe5b9060005260206000200160009054906101000a90046001600160a01b031683838151811061079f57fe5b6001600160a01b03909216602092830291909101909101526001909101905b600101610720565b600280546000190190558115610876576007546001600160a01b038481166000818152600860205260408082205481516316ac077b60e11b815260048101949094526024840152519290931692632d580ef69260448084019382900301818387803b15801561083457600080fd5b505af1158015610848573d6000803e3d6000fd5b505060038054600101905550506001600160a01b03831660009081526006602052604090206002905561089c565b6004805460010190556001600160a01b0383166000908152600660205260409020600390555b6000826108aa5760036108ad565b60025b60ff169050836001600160a01b03167f5a4afdb080a324e4b848d31257d6f645863d91a6bba9bb180f7ddbc90e0fd7278284604051808381526020018281526020019250505060405180910390a250505050565b6001600160a01b031660009081526001602052604090205460ff1690565b60608060035467ffffffffffffffff8111801561093b57600080fd5b50604051908082528060200260200182016040528015610965578160200160208202803683370190505b5090506000805b6005548110156103ea57600660006005838154811061098757fe5b60009182526020808320909101546001600160a01b0316835282019290925260400190205460021415610a0a57600581815481106109c157fe5b9060005260206000200160009054906101000a90046001600160a01b03168383815181106109eb57fe5b6001600160a01b03909216602092830291909101909101526001909101905b60010161096c565b610a1b33610901565b610a68576040805162461bcd60e51b815260206004820152601960248201527836b9b39739b2b73232b9103737ba1031b7b73a3937b63632b960391b604482015290519081900360640190fd5b610aa4828280806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250610aa892505050565b5050565b60005b600054811015610b0357600060016000808481548110610ac757fe5b6000918252602080832091909101546001600160a01b031683528201929092526040019020805460ff1916911515919091179055600101610aab565b5060005b8151811015610b5b576001806000848481518110610b2157fe5b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055600101610b07565b50805160008054828255818052610aa4927f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56391820191602086018215610bd7579160200282015b82811115610bd757825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610ba2565b50610be3929150610be7565b5090565b5b80821115610be35760008155600101610be856fea2646970667358221220fd019eb604b073e04ac7e2d321828c442abec65ba7b5b2ccb1610c6ab7e8b3f964736f6c63430007030033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100af5760003560e01c80630253889b146100b45780630aae7a6b1461010c5780630f560cd71461014b5780632d580ef61461015357806330ccebb5146101815780635ab1bd53146101b95780637cc0c3a7146101dd578063a91ee0dc146101e5578063ad3c98771461020b578063b2d82f3414610213578063b429afeb14610247578063bc6af08d14610281578063ea74838a14610289575b600080fd5b6100bc6102f7565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156100f85781810151838201526020016100e0565b505050509050019250505060405180910390f35b6101326004803603602081101561012257600080fd5b50356001600160a01b03166103f2565b6040805192835260208301919091528051918290030190f35b6100bc61041a565b61017f6004803603604081101561016957600080fd5b506001600160a01b03813516906020013561047c565b005b6101a76004803603602081101561019757600080fd5b50356001600160a01b03166105d1565b60408051918252519081900360200190f35b6101c16105ec565b604080516001600160a01b039092168252519081900360200190f35b6100bc6105fb565b61017f600480360360208110156101fb57600080fd5b50356001600160a01b031661065b565b6100bc6106d3565b61017f6004803603606081101561022957600080fd5b506001600160a01b03813516906020810135151590604001356107c6565b61026d6004803603602081101561025d57600080fd5b50356001600160a01b0316610901565b604080519115158252519081900360200190f35b6100bc61091f565b61017f6004803603602081101561029f57600080fd5b810190602081018135600160201b8111156102b957600080fd5b8201836020820111156102cb57600080fd5b803590602001918460208302840111600160201b831117156102ec57600080fd5b509092509050610a12565b60608060045467ffffffffffffffff8111801561031357600080fd5b5060405190808252806020026020018201604052801561033d578160200160208202803683370190505b5090506000805b6005548110156103ea57600660006005838154811061035f57fe5b60009182526020808320909101546001600160a01b03168352820192909252604001902054600314156103e2576005818154811061039957fe5b9060005260206000200160009054906101000a90046001600160a01b03168383815181106103c357fe5b6001600160a01b03909216602092830291909101909101526001909101905b600101610344565b509091505090565b6001600160a01b03166000908152600660209081526040808320546008909252909120549091565b6060600580548060200260200160405190810160405280929190818152602001828054801561047257602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610454575b5050505050905090565b6001600160a01b0382166104ca576040805162461bcd60e51b815260206004820152601060248201526f4e6f20656d707479206164647265737360801b604482015290519081900360640190fd5b6001600160a01b03821660009081526006602052604090205415610535576040805162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79207175652061646472657373206f6e652d74696d65000000604482015290519081900360640190fd5b6005805460018082019092557f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b0319166001600160a01b038516908117909155600280548301905560008181526006602090815260408083209490945560089052828120849055915190917fbc9b6517be6d16ed0bc17e7515e875bd133a96ecc708f0a71541b26a13979f6b91a25050565b6001600160a01b031660009081526006602052604090205490565b6007546001600160a01b031690565b60606000805480602002602001604051908101604052809291908181526020018280548015610472576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610454575050505050905090565b61066433610901565b6106b1576040805162461bcd60e51b815260206004820152601960248201527836b9b39739b2b73232b9103737ba1031b7b73a3937b63632b960391b604482015290519081900360640190fd5b600780546001600160a01b0319166001600160a01b0392909216919091179055565b60608060025467ffffffffffffffff811180156106ef57600080fd5b50604051908082528060200260200182016040528015610719578160200160208202803683370190505b5090506000805b6005548110156103ea57600660006005838154811061073b57fe5b60009182526020808320909101546001600160a01b03168352820192909252604001902054600114156107be576005818154811061077557fe5b9060005260206000200160009054906101000a90046001600160a01b031683838151811061079f57fe5b6001600160a01b03909216602092830291909101909101526001909101905b600101610720565b600280546000190190558115610876576007546001600160a01b038481166000818152600860205260408082205481516316ac077b60e11b815260048101949094526024840152519290931692632d580ef69260448084019382900301818387803b15801561083457600080fd5b505af1158015610848573d6000803e3d6000fd5b505060038054600101905550506001600160a01b03831660009081526006602052604090206002905561089c565b6004805460010190556001600160a01b0383166000908152600660205260409020600390555b6000826108aa5760036108ad565b60025b60ff169050836001600160a01b03167f5a4afdb080a324e4b848d31257d6f645863d91a6bba9bb180f7ddbc90e0fd7278284604051808381526020018281526020019250505060405180910390a250505050565b6001600160a01b031660009081526001602052604090205460ff1690565b60608060035467ffffffffffffffff8111801561093b57600080fd5b50604051908082528060200260200182016040528015610965578160200160208202803683370190505b5090506000805b6005548110156103ea57600660006005838154811061098757fe5b60009182526020808320909101546001600160a01b0316835282019290925260400190205460021415610a0a57600581815481106109c157fe5b9060005260206000200160009054906101000a90046001600160a01b03168383815181106109eb57fe5b6001600160a01b03909216602092830291909101909101526001909101905b60010161096c565b610a1b33610901565b610a68576040805162461bcd60e51b815260206004820152601960248201527836b9b39739b2b73232b9103737ba1031b7b73a3937b63632b960391b604482015290519081900360640190fd5b610aa4828280806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250610aa892505050565b5050565b60005b600054811015610b0357600060016000808481548110610ac757fe5b6000918252602080832091909101546001600160a01b031683528201929092526040019020805460ff1916911515919091179055600101610aab565b5060005b8151811015610b5b576001806000848481518110610b2157fe5b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055600101610b07565b50805160008054828255818052610aa4927f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56391820191602086018215610bd7579160200282015b82811115610bd757825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610ba2565b50610be3929150610be7565b5090565b5b80821115610be35760008155600101610be856fea2646970667358221220fd019eb604b073e04ac7e2d321828c442abec65ba7b5b2ccb1610c6ab7e8b3f964736f6c63430007030033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 652,
        "contract": "contracts/capTable/CapTableQue.sol:CapTableQue",
        "label": "_controllers",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 656,
        "contract": "contracts/capTable/CapTableQue.sol:CapTableQue",
        "label": "_isController",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 7,
        "contract": "contracts/capTable/CapTableQue.sol:CapTableQue",
        "label": "_quedCount",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 9,
        "contract": "contracts/capTable/CapTableQue.sol:CapTableQue",
        "label": "_approvedCount",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 11,
        "contract": "contracts/capTable/CapTableQue.sol:CapTableQue",
        "label": "_declinedCount",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 14,
        "contract": "contracts/capTable/CapTableQue.sol:CapTableQue",
        "label": "_capTablesQue",
        "offset": 0,
        "slot": "5",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 18,
        "contract": "contracts/capTable/CapTableQue.sol:CapTableQue",
        "label": "_capTableStatus",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 20,
        "contract": "contracts/capTable/CapTableQue.sol:CapTableQue",
        "label": "_CAP_TABLE_REGISTRY",
        "offset": 0,
        "slot": "7",
        "type": "t_contract(CapTableRegistry)647"
      },
      {
        "astId": 24,
        "contract": "contracts/capTable/CapTableQue.sol:CapTableQue",
        "label": "_capTableUuid",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_bytes32)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(CapTableRegistry)647": {
        "encoding": "inplace",
        "label": "contract CapTableRegistry",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_bytes32)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bytes32)",
        "numberOfBytes": "32",
        "value": "t_bytes32"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}