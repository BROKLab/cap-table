/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface AllowlistAdminRoleInterface extends ethers.utils.Interface {
  functions: {
    "renounceAllowlistAdmin(address)": FunctionFragment;
    "isAllowlistAdmin(address,address)": FunctionFragment;
    "removeAllowlistAdmin(address,address)": FunctionFragment;
    "addAllowlistAdmin(address,address)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "renounceAllowlistAdmin",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "isAllowlistAdmin",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "removeAllowlistAdmin",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "addAllowlistAdmin",
    values: [string, string]
  ): string;

  decodeFunctionResult(
    functionFragment: "renounceAllowlistAdmin",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isAllowlistAdmin",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeAllowlistAdmin",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addAllowlistAdmin",
    data: BytesLike
  ): Result;

  events: {
    "AllowlistAdminAdded(address,address)": EventFragment;
    "AllowlistAdminRemoved(address,address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "AllowlistAdminAdded"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "AllowlistAdminRemoved"): EventFragment;
}

export class AllowlistAdminRole extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: AllowlistAdminRoleInterface;

  functions: {
    renounceAllowlistAdmin(
      token: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "renounceAllowlistAdmin(address)"(
      token: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    isAllowlistAdmin(
      token: string,
      account: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    "isAllowlistAdmin(address,address)"(
      token: string,
      account: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    removeAllowlistAdmin(
      token: string,
      account: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "removeAllowlistAdmin(address,address)"(
      token: string,
      account: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    addAllowlistAdmin(
      token: string,
      account: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "addAllowlistAdmin(address,address)"(
      token: string,
      account: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  renounceAllowlistAdmin(
    token: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "renounceAllowlistAdmin(address)"(
    token: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  isAllowlistAdmin(
    token: string,
    account: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "isAllowlistAdmin(address,address)"(
    token: string,
    account: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  removeAllowlistAdmin(
    token: string,
    account: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "removeAllowlistAdmin(address,address)"(
    token: string,
    account: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  addAllowlistAdmin(
    token: string,
    account: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "addAllowlistAdmin(address,address)"(
    token: string,
    account: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    renounceAllowlistAdmin(
      token: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "renounceAllowlistAdmin(address)"(
      token: string,
      overrides?: CallOverrides
    ): Promise<void>;

    isAllowlistAdmin(
      token: string,
      account: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "isAllowlistAdmin(address,address)"(
      token: string,
      account: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    removeAllowlistAdmin(
      token: string,
      account: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "removeAllowlistAdmin(address,address)"(
      token: string,
      account: string,
      overrides?: CallOverrides
    ): Promise<void>;

    addAllowlistAdmin(
      token: string,
      account: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "addAllowlistAdmin(address,address)"(
      token: string,
      account: string,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    AllowlistAdminAdded(
      token: string | null,
      account: string | null
    ): EventFilter;

    AllowlistAdminRemoved(
      token: string | null,
      account: string | null
    ): EventFilter;
  };

  estimateGas: {
    renounceAllowlistAdmin(
      token: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "renounceAllowlistAdmin(address)"(
      token: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    isAllowlistAdmin(
      token: string,
      account: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "isAllowlistAdmin(address,address)"(
      token: string,
      account: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    removeAllowlistAdmin(
      token: string,
      account: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "removeAllowlistAdmin(address,address)"(
      token: string,
      account: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    addAllowlistAdmin(
      token: string,
      account: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "addAllowlistAdmin(address,address)"(
      token: string,
      account: string,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    renounceAllowlistAdmin(
      token: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "renounceAllowlistAdmin(address)"(
      token: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    isAllowlistAdmin(
      token: string,
      account: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isAllowlistAdmin(address,address)"(
      token: string,
      account: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    removeAllowlistAdmin(
      token: string,
      account: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "removeAllowlistAdmin(address,address)"(
      token: string,
      account: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    addAllowlistAdmin(
      token: string,
      account: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "addAllowlistAdmin(address,address)"(
      token: string,
      account: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
