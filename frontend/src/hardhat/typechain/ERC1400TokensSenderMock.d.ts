/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface ERC1400TokensSenderMockInterface extends ethers.utils.Interface {
  functions: {
    "canImplementInterfaceForAddress(bytes32,address)": FunctionFragment;
    "tokensToTransfer(bytes,bytes32,address,address,address,uint256,bytes,bytes)": FunctionFragment;
    "canTransfer(bytes,bytes32,address,address,address,uint256,bytes,bytes)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "canImplementInterfaceForAddress",
    values: [BytesLike, string]
  ): string;
  encodeFunctionData(
    functionFragment: "tokensToTransfer",
    values: [
      BytesLike,
      BytesLike,
      string,
      string,
      string,
      BigNumberish,
      BytesLike,
      BytesLike
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "canTransfer",
    values: [
      BytesLike,
      BytesLike,
      string,
      string,
      string,
      BigNumberish,
      BytesLike,
      BytesLike
    ]
  ): string;

  decodeFunctionResult(
    functionFragment: "canImplementInterfaceForAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "tokensToTransfer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "canTransfer",
    data: BytesLike
  ): Result;

  events: {};
}

export class ERC1400TokensSenderMock extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: ERC1400TokensSenderMockInterface;

  functions: {
    canImplementInterfaceForAddress(
      interfaceHash: BytesLike,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "canImplementInterfaceForAddress(bytes32,address)"(
      interfaceHash: BytesLike,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    tokensToTransfer(
      arg0: BytesLike,
      arg1: BytesLike,
      arg2: string,
      from: string,
      to: string,
      value: BigNumberish,
      data: BytesLike,
      arg7: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "tokensToTransfer(bytes,bytes32,address,address,address,uint256,bytes,bytes)"(
      arg0: BytesLike,
      arg1: BytesLike,
      arg2: string,
      from: string,
      to: string,
      value: BigNumberish,
      data: BytesLike,
      arg7: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    canTransfer(
      arg0: BytesLike,
      arg1: BytesLike,
      arg2: string,
      from: string,
      to: string,
      value: BigNumberish,
      data: BytesLike,
      arg7: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    "canTransfer(bytes,bytes32,address,address,address,uint256,bytes,bytes)"(
      arg0: BytesLike,
      arg1: BytesLike,
      arg2: string,
      from: string,
      to: string,
      value: BigNumberish,
      data: BytesLike,
      arg7: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;
  };

  canImplementInterfaceForAddress(
    interfaceHash: BytesLike,
    arg1: string,
    overrides?: CallOverrides
  ): Promise<string>;

  "canImplementInterfaceForAddress(bytes32,address)"(
    interfaceHash: BytesLike,
    arg1: string,
    overrides?: CallOverrides
  ): Promise<string>;

  tokensToTransfer(
    arg0: BytesLike,
    arg1: BytesLike,
    arg2: string,
    from: string,
    to: string,
    value: BigNumberish,
    data: BytesLike,
    arg7: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "tokensToTransfer(bytes,bytes32,address,address,address,uint256,bytes,bytes)"(
    arg0: BytesLike,
    arg1: BytesLike,
    arg2: string,
    from: string,
    to: string,
    value: BigNumberish,
    data: BytesLike,
    arg7: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  canTransfer(
    arg0: BytesLike,
    arg1: BytesLike,
    arg2: string,
    from: string,
    to: string,
    value: BigNumberish,
    data: BytesLike,
    arg7: BytesLike,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "canTransfer(bytes,bytes32,address,address,address,uint256,bytes,bytes)"(
    arg0: BytesLike,
    arg1: BytesLike,
    arg2: string,
    from: string,
    to: string,
    value: BigNumberish,
    data: BytesLike,
    arg7: BytesLike,
    overrides?: CallOverrides
  ): Promise<boolean>;

  callStatic: {
    canImplementInterfaceForAddress(
      interfaceHash: BytesLike,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<string>;

    "canImplementInterfaceForAddress(bytes32,address)"(
      interfaceHash: BytesLike,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<string>;

    tokensToTransfer(
      arg0: BytesLike,
      arg1: BytesLike,
      arg2: string,
      from: string,
      to: string,
      value: BigNumberish,
      data: BytesLike,
      arg7: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "tokensToTransfer(bytes,bytes32,address,address,address,uint256,bytes,bytes)"(
      arg0: BytesLike,
      arg1: BytesLike,
      arg2: string,
      from: string,
      to: string,
      value: BigNumberish,
      data: BytesLike,
      arg7: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    canTransfer(
      arg0: BytesLike,
      arg1: BytesLike,
      arg2: string,
      from: string,
      to: string,
      value: BigNumberish,
      data: BytesLike,
      arg7: BytesLike,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "canTransfer(bytes,bytes32,address,address,address,uint256,bytes,bytes)"(
      arg0: BytesLike,
      arg1: BytesLike,
      arg2: string,
      from: string,
      to: string,
      value: BigNumberish,
      data: BytesLike,
      arg7: BytesLike,
      overrides?: CallOverrides
    ): Promise<boolean>;
  };

  filters: {};

  estimateGas: {
    canImplementInterfaceForAddress(
      interfaceHash: BytesLike,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "canImplementInterfaceForAddress(bytes32,address)"(
      interfaceHash: BytesLike,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    tokensToTransfer(
      arg0: BytesLike,
      arg1: BytesLike,
      arg2: string,
      from: string,
      to: string,
      value: BigNumberish,
      data: BytesLike,
      arg7: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "tokensToTransfer(bytes,bytes32,address,address,address,uint256,bytes,bytes)"(
      arg0: BytesLike,
      arg1: BytesLike,
      arg2: string,
      from: string,
      to: string,
      value: BigNumberish,
      data: BytesLike,
      arg7: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    canTransfer(
      arg0: BytesLike,
      arg1: BytesLike,
      arg2: string,
      from: string,
      to: string,
      value: BigNumberish,
      data: BytesLike,
      arg7: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "canTransfer(bytes,bytes32,address,address,address,uint256,bytes,bytes)"(
      arg0: BytesLike,
      arg1: BytesLike,
      arg2: string,
      from: string,
      to: string,
      value: BigNumberish,
      data: BytesLike,
      arg7: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    canImplementInterfaceForAddress(
      interfaceHash: BytesLike,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "canImplementInterfaceForAddress(bytes32,address)"(
      interfaceHash: BytesLike,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    tokensToTransfer(
      arg0: BytesLike,
      arg1: BytesLike,
      arg2: string,
      from: string,
      to: string,
      value: BigNumberish,
      data: BytesLike,
      arg7: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "tokensToTransfer(bytes,bytes32,address,address,address,uint256,bytes,bytes)"(
      arg0: BytesLike,
      arg1: BytesLike,
      arg2: string,
      from: string,
      to: string,
      value: BigNumberish,
      data: BytesLike,
      arg7: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    canTransfer(
      arg0: BytesLike,
      arg1: BytesLike,
      arg2: string,
      from: string,
      to: string,
      value: BigNumberish,
      data: BytesLike,
      arg7: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "canTransfer(bytes,bytes32,address,address,address,uint256,bytes,bytes)"(
      arg0: BytesLike,
      arg1: BytesLike,
      arg2: string,
      from: string,
      to: string,
      value: BigNumberish,
      data: BytesLike,
      arg7: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
