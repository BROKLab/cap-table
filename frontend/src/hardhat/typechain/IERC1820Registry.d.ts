/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface IERC1820RegistryInterface extends ethers.utils.Interface {
  functions: {
    "setInterfaceImplementer(address,bytes32,address)": FunctionFragment;
    "getManager(address)": FunctionFragment;
    "setManager(address,address)": FunctionFragment;
    "getInterfaceImplementer(address,bytes32)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "setInterfaceImplementer",
    values: [string, BytesLike, string]
  ): string;
  encodeFunctionData(functionFragment: "getManager", values: [string]): string;
  encodeFunctionData(
    functionFragment: "setManager",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getInterfaceImplementer",
    values: [string, BytesLike]
  ): string;

  decodeFunctionResult(
    functionFragment: "setInterfaceImplementer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getManager", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "setManager", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getInterfaceImplementer",
    data: BytesLike
  ): Result;

  events: {};
}

export class IERC1820Registry extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: IERC1820RegistryInterface;

  functions: {
    setInterfaceImplementer(
      _addr: string,
      _interfaceHash: BytesLike,
      _implementer: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setInterfaceImplementer(address,bytes32,address)"(
      _addr: string,
      _interfaceHash: BytesLike,
      _implementer: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    getManager(
      _addr: string,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "getManager(address)"(
      _addr: string,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    setManager(
      _addr: string,
      _newManager: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setManager(address,address)"(
      _addr: string,
      _newManager: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    getInterfaceImplementer(
      _addr: string,
      _interfaceHash: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "getInterfaceImplementer(address,bytes32)"(
      _addr: string,
      _interfaceHash: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;
  };

  setInterfaceImplementer(
    _addr: string,
    _interfaceHash: BytesLike,
    _implementer: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setInterfaceImplementer(address,bytes32,address)"(
    _addr: string,
    _interfaceHash: BytesLike,
    _implementer: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  getManager(_addr: string, overrides?: CallOverrides): Promise<string>;

  "getManager(address)"(
    _addr: string,
    overrides?: CallOverrides
  ): Promise<string>;

  setManager(
    _addr: string,
    _newManager: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setManager(address,address)"(
    _addr: string,
    _newManager: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  getInterfaceImplementer(
    _addr: string,
    _interfaceHash: BytesLike,
    overrides?: CallOverrides
  ): Promise<string>;

  "getInterfaceImplementer(address,bytes32)"(
    _addr: string,
    _interfaceHash: BytesLike,
    overrides?: CallOverrides
  ): Promise<string>;

  callStatic: {
    setInterfaceImplementer(
      _addr: string,
      _interfaceHash: BytesLike,
      _implementer: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "setInterfaceImplementer(address,bytes32,address)"(
      _addr: string,
      _interfaceHash: BytesLike,
      _implementer: string,
      overrides?: CallOverrides
    ): Promise<void>;

    getManager(_addr: string, overrides?: CallOverrides): Promise<string>;

    "getManager(address)"(
      _addr: string,
      overrides?: CallOverrides
    ): Promise<string>;

    setManager(
      _addr: string,
      _newManager: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "setManager(address,address)"(
      _addr: string,
      _newManager: string,
      overrides?: CallOverrides
    ): Promise<void>;

    getInterfaceImplementer(
      _addr: string,
      _interfaceHash: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    "getInterfaceImplementer(address,bytes32)"(
      _addr: string,
      _interfaceHash: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;
  };

  filters: {};

  estimateGas: {
    setInterfaceImplementer(
      _addr: string,
      _interfaceHash: BytesLike,
      _implementer: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setInterfaceImplementer(address,bytes32,address)"(
      _addr: string,
      _interfaceHash: BytesLike,
      _implementer: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    getManager(_addr: string, overrides?: CallOverrides): Promise<BigNumber>;

    "getManager(address)"(
      _addr: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setManager(
      _addr: string,
      _newManager: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setManager(address,address)"(
      _addr: string,
      _newManager: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    getInterfaceImplementer(
      _addr: string,
      _interfaceHash: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getInterfaceImplementer(address,bytes32)"(
      _addr: string,
      _interfaceHash: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    setInterfaceImplementer(
      _addr: string,
      _interfaceHash: BytesLike,
      _implementer: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setInterfaceImplementer(address,bytes32,address)"(
      _addr: string,
      _interfaceHash: BytesLike,
      _implementer: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    getManager(
      _addr: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getManager(address)"(
      _addr: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setManager(
      _addr: string,
      _newManager: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setManager(address,address)"(
      _addr: string,
      _newManager: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    getInterfaceImplementer(
      _addr: string,
      _interfaceHash: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getInterfaceImplementer(address,bytes32)"(
      _addr: string,
      _interfaceHash: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
