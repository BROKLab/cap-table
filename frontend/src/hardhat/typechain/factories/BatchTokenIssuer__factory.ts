/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { BatchTokenIssuer } from "../BatchTokenIssuer";

export class BatchTokenIssuer__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<BatchTokenIssuer> {
    return super.deploy(overrides || {}) as Promise<BatchTokenIssuer>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BatchTokenIssuer {
    return super.attach(address) as BatchTokenIssuer;
  }
  connect(signer: Signer): BatchTokenIssuer__factory {
    return super.connect(signer) as BatchTokenIssuer__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BatchTokenIssuer {
    return new Contract(address, _abi, signerOrProvider) as BatchTokenIssuer;
  }
}

const _abi = [
  {
    constant: true,
    inputs: [
      {
        name: "interfaceHash",
        type: "bytes32",
      },
      {
        name: "",
        type: "address",
      },
    ],
    name: "canImplementInterfaceForAddress",
    outputs: [
      {
        name: "",
        type: "bytes32",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "token",
        type: "address",
      },
      {
        name: "partitions",
        type: "bytes32[]",
      },
      {
        name: "tokenHolders",
        type: "address[]",
      },
      {
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "batchIssueByPartition",
    outputs: [
      {
        name: "",
        type: "uint256[]",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060408051808201909152601081527f4261746368546f6b656e49737375657200000000000000000000000000000000602082015261005b906401000000006104a161006082021704565b6100fb565b6001600080836040516020018082805190602001908083835b602083106100985780518252601f199092019160209182019101610079565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6105d48061010a6000396000f3fe608060405234801561001057600080fd5b50600436106100395760e060020a6000350463249cb3fa811461003e578063edec7e151461007c575b600080fd5b61006a6004803603604081101561005457600080fd5b5080359060200135600160a060020a03166101f0565b60408051918252519081900360200190f35b6101a06004803603608081101561009257600080fd5b600160a060020a0382351691908101906040810160208201356401000000008111156100bd57600080fd5b8201836020820111156100cf57600080fd5b803590602001918460208302840111640100000000831117156100f157600080fd5b91939092909160208101903564010000000081111561010f57600080fd5b82018360208201111561012157600080fd5b8035906020019184602083028401116401000000008311171561014357600080fd5b91939092909160208101903564010000000081111561016157600080fd5b82018360208201111561017357600080fd5b8035906020019184602083028401116401000000008311171561019557600080fd5b50909250905061025f565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156101dc5781810151838201526020016101c4565b505050509050019250505060405180910390f35b60008281526020819052604081205460ff16156102555760405160200180807f455243313832305f4143434550545f4d414749430000000000000000000000008152506014019050604051602081830303815290604052805190602001209050610259565b5060005b92915050565b6040805160e160020a6355138f0d02815233600482015290516060918991600160a060020a0383169163aa271e1a916024808301926020929190829003018186803b1580156102ad57600080fd5b505afa1580156102c1573d6000803e3d6000fd5b505050506040513d60208110156102d757600080fd5b5051151561032f576040805160e560020a62461bcd02815260206004820152601d60248201527f53656e646572206973206e6f74206120746f6b656e206d696e7465722e000000604482015290519081900360640190fd5b8685146103705760405160e560020a62461bcd0281526004018080602001828103825260398152602001806105706039913960400191505060405180910390fd5b8683146103b15760405160e560020a62461bcd02815260040180806020018281038252603381526020018061053d6033913960400191505060405180910390fd5b60005b8781101561049457600160a060020a038a166367c849198a8a848181106103d757fe5b9050602002013589898581811015156103ec57fe5b90506020020135600160a060020a0316888886818110151561040a57fe5b6040805160e060020a63ffffffff89160281526004810196909652600160a060020a039094166024860152602002919091013560448401525060806064830152600060848301819052905160c48084019382900301818387803b15801561047057600080fd5b505af1158015610484573d6000803e3d6000fd5b5050600190920191506103b49050565b5050979650505050505050565b6001600080836040516020018082805190602001908083835b602083106104d95780518252601f1990920191602091820191016104ba565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff0219169083151502179055505056fe706172746974696f6e7320616e642076616c75657320617272617973206861766520646966666572656e74206c656e67746873706172746974696f6e7320616e6420746f6b656e486f6c6465727320617272617973206861766520646966666572656e74206c656e67746873a165627a7a7230582044e8a988aeded0b762262908fba77e0901ec721f7fc03050b6b3e70acd93aa250029";
