/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { CapTableQue } from "../CapTableQue";

export class CapTableQue__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(controllers: string[], overrides?: Overrides): Promise<CapTableQue> {
    return super.deploy(controllers, overrides || {}) as Promise<CapTableQue>;
  }
  getDeployTransaction(
    controllers: string[],
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(controllers, overrides || {});
  }
  attach(address: string): CapTableQue {
    return super.attach(address) as CapTableQue;
  }
  connect(signer: Signer): CapTableQue__factory {
    return super.connect(signer) as CapTableQue__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CapTableQue {
    return new Contract(address, _abi, signerOrProvider) as CapTableQue;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "controllers",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "capTable",
        type: "address",
      },
    ],
    name: "qued",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "capTable",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "status",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "reason",
        type: "bytes32",
      },
    ],
    name: "statusUpdate",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "adr",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "uuid",
        type: "bytes32",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "controllers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRegistry",
    outputs: [
      {
        internalType: "address",
        name: "capTableRegistry",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "adr",
        type: "address",
      },
    ],
    name: "getStatus",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "adr",
        type: "address",
      },
    ],
    name: "info",
    outputs: [
      {
        internalType: "uint256",
        name: "status",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "uuid",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "adr",
        type: "address",
      },
    ],
    name: "isController",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "list",
    outputs: [
      {
        internalType: "address[]",
        name: "capTableList",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "listApproved",
    outputs: [
      {
        internalType: "address[]",
        name: "capTableList",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "listDeclined",
    outputs: [
      {
        internalType: "address[]",
        name: "capTableList",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "listQued",
    outputs: [
      {
        internalType: "address[]",
        name: "capTableList",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "adr",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
      {
        internalType: "bytes32",
        name: "reason",
        type: "bytes32",
      },
    ],
    name: "process",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "operators",
        type: "address[]",
      },
    ],
    name: "setControllers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "adr",
        type: "address",
      },
    ],
    name: "setRegistry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000e7838038062000e78833981810160405260208110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82518660208202830111640100000000821117156200008c57600080fd5b82525081516020918201928201910280838360005b83811015620000bb578181015183820152602001620000a1565b5050505090500160405250505080620000da81620000e260201b60201c565b505062000236565b60005b60005481101562000140576000600160008084815481106200010357fe5b6000918252602080832091909101546001600160a01b031683528201929092526040019020805460ff1916911515919091179055600101620000e5565b5060005b81518110156200019b5760018060008484815181106200016057fe5b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905560010162000144565b508051620001b1906000906020840190620001b5565b5050565b8280548282559060005260206000209081019282156200020d579160200282015b828111156200020d57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190620001d6565b506200021b9291506200021f565b5090565b5b808211156200021b576000815560010162000220565b610c3280620002466000396000f3fe608060405234801561001057600080fd5b50600436106100af5760003560e01c80630253889b146100b45780630aae7a6b1461010c5780630f560cd71461014b5780632d580ef61461015357806330ccebb5146101815780635ab1bd53146101b95780637cc0c3a7146101dd578063a91ee0dc146101e5578063ad3c98771461020b578063b2d82f3414610213578063b429afeb14610247578063bc6af08d14610281578063ea74838a14610289575b600080fd5b6100bc6102f7565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156100f85781810151838201526020016100e0565b505050509050019250505060405180910390f35b6101326004803603602081101561012257600080fd5b50356001600160a01b03166103f2565b6040805192835260208301919091528051918290030190f35b6100bc61041a565b61017f6004803603604081101561016957600080fd5b506001600160a01b03813516906020013561047c565b005b6101a76004803603602081101561019757600080fd5b50356001600160a01b03166105d1565b60408051918252519081900360200190f35b6101c16105ec565b604080516001600160a01b039092168252519081900360200190f35b6100bc6105fb565b61017f600480360360208110156101fb57600080fd5b50356001600160a01b031661065b565b6100bc6106d3565b61017f6004803603606081101561022957600080fd5b506001600160a01b03813516906020810135151590604001356107c6565b61026d6004803603602081101561025d57600080fd5b50356001600160a01b0316610901565b604080519115158252519081900360200190f35b6100bc61091f565b61017f6004803603602081101561029f57600080fd5b810190602081018135600160201b8111156102b957600080fd5b8201836020820111156102cb57600080fd5b803590602001918460208302840111600160201b831117156102ec57600080fd5b509092509050610a12565b60608060045467ffffffffffffffff8111801561031357600080fd5b5060405190808252806020026020018201604052801561033d578160200160208202803683370190505b5090506000805b6005548110156103ea57600660006005838154811061035f57fe5b60009182526020808320909101546001600160a01b03168352820192909252604001902054600314156103e2576005818154811061039957fe5b9060005260206000200160009054906101000a90046001600160a01b03168383815181106103c357fe5b6001600160a01b03909216602092830291909101909101526001909101905b600101610344565b509091505090565b6001600160a01b03166000908152600660209081526040808320546008909252909120549091565b6060600580548060200260200160405190810160405280929190818152602001828054801561047257602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610454575b5050505050905090565b6001600160a01b0382166104ca576040805162461bcd60e51b815260206004820152601060248201526f4e6f20656d707479206164647265737360801b604482015290519081900360640190fd5b6001600160a01b03821660009081526006602052604090205415610535576040805162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79207175652061646472657373206f6e652d74696d65000000604482015290519081900360640190fd5b6005805460018082019092557f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b0319166001600160a01b038516908117909155600280548301905560008181526006602090815260408083209490945560089052828120849055915190917fbc9b6517be6d16ed0bc17e7515e875bd133a96ecc708f0a71541b26a13979f6b91a25050565b6001600160a01b031660009081526006602052604090205490565b6007546001600160a01b031690565b60606000805480602002602001604051908101604052809291908181526020018280548015610472576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610454575050505050905090565b61066433610901565b6106b1576040805162461bcd60e51b815260206004820152601960248201527836b9b39739b2b73232b9103737ba1031b7b73a3937b63632b960391b604482015290519081900360640190fd5b600780546001600160a01b0319166001600160a01b0392909216919091179055565b60608060025467ffffffffffffffff811180156106ef57600080fd5b50604051908082528060200260200182016040528015610719578160200160208202803683370190505b5090506000805b6005548110156103ea57600660006005838154811061073b57fe5b60009182526020808320909101546001600160a01b03168352820192909252604001902054600114156107be576005818154811061077557fe5b9060005260206000200160009054906101000a90046001600160a01b031683838151811061079f57fe5b6001600160a01b03909216602092830291909101909101526001909101905b600101610720565b600280546000190190558115610876576007546001600160a01b038481166000818152600860205260408082205481516316ac077b60e11b815260048101949094526024840152519290931692632d580ef69260448084019382900301818387803b15801561083457600080fd5b505af1158015610848573d6000803e3d6000fd5b505060038054600101905550506001600160a01b03831660009081526006602052604090206002905561089c565b6004805460010190556001600160a01b0383166000908152600660205260409020600390555b6000826108aa5760036108ad565b60025b60ff169050836001600160a01b03167f5a4afdb080a324e4b848d31257d6f645863d91a6bba9bb180f7ddbc90e0fd7278284604051808381526020018281526020019250505060405180910390a250505050565b6001600160a01b031660009081526001602052604090205460ff1690565b60608060035467ffffffffffffffff8111801561093b57600080fd5b50604051908082528060200260200182016040528015610965578160200160208202803683370190505b5090506000805b6005548110156103ea57600660006005838154811061098757fe5b60009182526020808320909101546001600160a01b0316835282019290925260400190205460021415610a0a57600581815481106109c157fe5b9060005260206000200160009054906101000a90046001600160a01b03168383815181106109eb57fe5b6001600160a01b03909216602092830291909101909101526001909101905b60010161096c565b610a1b33610901565b610a68576040805162461bcd60e51b815260206004820152601960248201527836b9b39739b2b73232b9103737ba1031b7b73a3937b63632b960391b604482015290519081900360640190fd5b610aa4828280806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250610aa892505050565b5050565b60005b600054811015610b0357600060016000808481548110610ac757fe5b6000918252602080832091909101546001600160a01b031683528201929092526040019020805460ff1916911515919091179055600101610aab565b5060005b8151811015610b5b576001806000848481518110610b2157fe5b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055600101610b07565b50805160008054828255818052610aa4927f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56391820191602086018215610bd7579160200282015b82811115610bd757825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610ba2565b50610be3929150610be7565b5090565b5b80821115610be35760008155600101610be856fea2646970667358221220fd019eb604b073e04ac7e2d321828c442abec65ba7b5b2ccb1610c6ab7e8b3f964736f6c63430007030033";
