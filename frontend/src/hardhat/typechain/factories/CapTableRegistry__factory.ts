/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { CapTableRegistry } from "../CapTableRegistry";

export class CapTableRegistry__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    controllers: string[],
    overrides?: Overrides
  ): Promise<CapTableRegistry> {
    return super.deploy(
      controllers,
      overrides || {}
    ) as Promise<CapTableRegistry>;
  }
  getDeployTransaction(
    controllers: string[],
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(controllers, overrides || {});
  }
  attach(address: string): CapTableRegistry {
    return super.attach(address) as CapTableRegistry;
  }
  connect(signer: Signer): CapTableRegistry__factory {
    return super.connect(signer) as CapTableRegistry__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CapTableRegistry {
    return new Contract(address, _abi, signerOrProvider) as CapTableRegistry;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "controllers",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "capTableAddress",
        type: "address",
      },
    ],
    name: "capTableAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "capTableRemoved",
        type: "address",
      },
    ],
    name: "capTableRemoved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "adr",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "uuid",
        type: "bytes32",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "controllers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "adr",
        type: "address",
      },
    ],
    name: "info",
    outputs: [
      {
        internalType: "bytes32",
        name: "uuid",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "active",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "adr",
        type: "address",
      },
    ],
    name: "isController",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "list",
    outputs: [
      {
        internalType: "address[]",
        name: "capTableList",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "listActive",
    outputs: [
      {
        internalType: "address[]",
        name: "capTableList",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "adr",
        type: "address",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "operators",
        type: "address[]",
      },
    ],
    name: "setControllers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610ab2380380610ab28339818101604052602081101561003357600080fd5b810190808051604051939291908464010000000082111561005357600080fd5b90830190602082018581111561006857600080fd5b825186602082028301116401000000008211171561008557600080fd5b82525081516020918201928201910280838360005b838110156100b257818101518382015260200161009a565b50505050905001604052505050806100cf816100d660201b60201c565b505061021b565b60005b600054811015610131576000600160008084815481106100f557fe5b6000918252602080832091909101546001600160a01b031683528201929092526040019020805460ff19169115159190911790556001016100d9565b5060005b815181101561018957600180600084848151811061014f57fe5b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055600101610135565b50805161019d9060009060208401906101a1565b5050565b8280548282559060005260206000209081019282156101f6579160200282015b828111156101f657825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906101c1565b50610202929150610206565b5090565b5b808211156102025760008155600101610207565b6108888061022a6000396000f3fe608060405234801561001057600080fd5b50600436106100785760003560e01c80630aae7a6b1461007d5780630f560cd7146100bc57806329092d0e146101145780632d580ef61461013c5780637cc0c3a714610168578063b429afeb14610170578063db25b407146101aa578063ea74838a146101b2575b600080fd5b6100a36004803603602081101561009357600080fd5b50356001600160a01b0316610220565b6040805192835290151560208301528051918290030190f35b6100c461024d565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156101005781810151838201526020016100e8565b505050509050019250505060405180910390f35b61013a6004803603602081101561012a57600080fd5b50356001600160a01b03166102af565b005b61013a6004803603604081101561015257600080fd5b506001600160a01b0381351690602001356102bb565b6100c46102c9565b6101966004803603602081101561018657600080fd5b50356001600160a01b0316610329565b604080519115158252519081900360200190f35b6100c4610347565b61013a600480360360208110156101c857600080fd5b810190602081018135600160201b8111156101e257600080fd5b8201836020820111156101f457600080fd5b803590602001918460208302840111600160201b8311171561021557600080fd5b509092509050610493565b6001600160a01b03811660009081526004602090815260408083205460039092529091205460ff16915091565b606060028054806020026020016040519081016040528092919081815260200182805480156102a557602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610287575b5050505050905090565b6102b881610517565b50565b6102c582826105dd565b5050565b606060008054806020026020016040519081016040528092919081815260200182805480156102a5576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610287575050505050905090565b6001600160a01b031660009081526001602052604090205460ff1690565b6060600060065411610399576040805162461bcd60e51b81526020600482015260166024820152754361705461626c65206c69737420697320656d70747960501b604482015290519081900360640190fd5b606060065467ffffffffffffffff811180156103b457600080fd5b506040519080825280602002602001820160405280156103de578160200160208202803683370190505b5090506000805b60025481101561048b57600360006002838154811061040057fe5b60009182526020808320909101546001600160a01b0316835282019290925260400190205460ff1615610483576002818154811061043a57fe5b9060005260206000200160009054906101000a90046001600160a01b031683838151811061046457fe5b6001600160a01b03909216602092830291909101909101526001909101905b6001016103e5565b509091505090565b61049c33610329565b6104db576040805162461bcd60e51b81526020600482015260196024820152600080516020610833833981519152604482015290519081900360640190fd5b6102c58282808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506106de92505050565b61052033610329565b61055f576040805162461bcd60e51b81526020600482015260196024820152600080516020610833833981519152604482015290519081900360640190fd5b6001600160a01b0381166000818152600460209081526040808320805460038452828520805460ff1916905590849055808452600590925280832080546001600160a01b031916905560068054600019019055519092917f59f92f7caa16e166e81629c044a7dc429c7ec26acf8a7bae64322c0b91ce09b991a25050565b6105e633610329565b610625576040805162461bcd60e51b81526020600482015260196024820152600080516020610833833981519152604482015290519081900360640190fd5b6002805460018181019092557f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0385166001600160a01b031991821681179092556000828152600360209081526040808320805460ff19168717905560048252808320879055868352600590915280822080549093168417909255600680549094019093555190917f477b441ded9fa5e973cb21836b0ba967978e31d48cd8fcea78b48c9a2c671aa391a25050565b60005b600054811015610739576000600160008084815481106106fd57fe5b6000918252602080832091909101546001600160a01b031683528201929092526040019020805460ff19169115159190911790556001016106e1565b5060005b815181101561079157600180600084848151811061075757fe5b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905560010161073d565b508051600080548282558180526102c5927f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5639182019160208601821561080d579160200282015b8281111561080d57825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906107d8565b5061081992915061081d565b5090565b5b80821115610819576000815560010161081e56fe6d73672e73656e646572206e6f7420636f6e74726f6c6c657200000000000000a2646970667358221220d7b45460724779012786f6b10a07d42baf5d0193f7a00a4d0d537c5ab248c01164736f6c63430007030033";
