/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { CertificateSignerMock } from "../CertificateSignerMock";

export class CertificateSignerMock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(token: string, overrides?: Overrides): Promise<CertificateSignerMock> {
    return super.deploy(
      token,
      overrides || {}
    ) as Promise<CertificateSignerMock>;
  }
  getDeployTransaction(
    token: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(token, overrides || {});
  }
  attach(address: string): CertificateSignerMock {
    return super.attach(address) as CertificateSignerMock;
  }
  connect(signer: Signer): CertificateSignerMock__factory {
    return super.connect(signer) as CertificateSignerMock__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CertificateSignerMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CertificateSignerMock;
  }
}

const _abi = [
  {
    constant: false,
    inputs: [
      {
        name: "token",
        type: "address",
      },
    ],
    name: "renounceCertificateSigner",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "token",
        type: "address",
      },
      {
        name: "account",
        type: "address",
      },
    ],
    name: "isCertificateSigner",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "token",
        type: "address",
      },
      {
        name: "account",
        type: "address",
      },
    ],
    name: "addCertificateSigner",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "token",
        type: "address",
      },
      {
        name: "account",
        type: "address",
      },
    ],
    name: "removeCertificateSigner",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        name: "token",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        name: "account",
        type: "address",
      },
    ],
    name: "CertificateSignerAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        name: "account",
        type: "address",
      },
    ],
    name: "CertificateSignerRemoved",
    type: "event",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516020806104c78339810180604052602081101561003057600080fd5b5051610045813364010000000061004b810204565b5061014c565b600160a060020a038216600090815260208190526040902061007a90826401000000006102f26100be82021704565b80600160a060020a031682600160a060020a03167f9a01aee9f656aba8760d771cf21d803168ecc664c252c9374f4a3252481fbf3560405160405180910390a35050565b600160a060020a03811615156100d357600080fd5b6100e68282640100000000610115810204565b156100f057600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b6000600160a060020a038216151561012c57600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b61036c8061015b6000396000f3fe608060405234801561001057600080fd5b506004361061004f5760e060020a60003504633bddaf8f81146100545780639e59ceba1461007c578063c69664bb146100be578063e81ea541146100ec575b600080fd5b61007a6004803603602081101561006a57600080fd5b5035600160a060020a031661011a565b005b6100aa6004803603604081101561009257600080fd5b50600160a060020a0381358116916020013516610127565b604080519115158252519081900360200190f35b61007a600480360360408110156100d457600080fd5b50600160a060020a0381358116916020013516610156565b61007a6004803603604081101561010257600080fd5b50600160a060020a038135811691602001351661017b565b6101248133610197565b50565b600160a060020a038216600090815260208190526040812061014f908363ffffffff61020316565b9392505050565b816101618133610127565b151561016c57600080fd5b610176838361023a565b505050565b816101868133610127565b151561019157600080fd5b61017683835b600160a060020a03821660009081526020819052604090206101bf908263ffffffff6102a616565b80600160a060020a031682600160a060020a03167f795a3a12ab7aa35ee8d4681ead2986eae8de69f5491d9dccfeca0442f644db8160405160405180910390a35050565b6000600160a060020a038216151561021a57600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b600160a060020a0382166000908152602081905260409020610262908263ffffffff6102f216565b80600160a060020a031682600160a060020a03167f9a01aee9f656aba8760d771cf21d803168ecc664c252c9374f4a3252481fbf3560405160405180910390a35050565b600160a060020a03811615156102bb57600080fd5b6102c58282610203565b15156102d057600080fd5b600160a060020a0316600090815260209190915260409020805460ff19169055565b600160a060020a038116151561030757600080fd5b6103118282610203565b1561031b57600080fd5b600160a060020a0316600090815260209190915260409020805460ff1916600117905556fea165627a7a723058202f173cdcf6b07b34f24ad3d93f3adff3ba788766a0561e8675d2d94a152d29930029";
