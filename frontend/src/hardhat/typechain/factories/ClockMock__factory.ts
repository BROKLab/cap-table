/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { ClockMock } from "../ClockMock";

export class ClockMock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<ClockMock> {
    return super.deploy(overrides || {}) as Promise<ClockMock>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ClockMock {
    return super.attach(address) as ClockMock;
  }
  connect(signer: Signer): ClockMock__factory {
    return super.connect(signer) as ClockMock__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ClockMock {
    return new Contract(address, _abi, signerOrProvider) as ClockMock;
  }
}

const _abi = [
  {
    constant: true,
    inputs: [],
    name: "getTime",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor",
  },
];

const _bytecode =
  "0x6080604052348015600f57600080fd5b5060788061001e6000396000f3fe6080604052348015600f57600080fd5b5060043610602b5760e060020a6000350463557ed1ba81146030575b600080fd5b60366048565b60408051918252519081900360200190f35b429056fea165627a7a723058202e64b5d5f358134447ba37aa18eab97f0fbd46067e2cc97a98f03524eacee6510029";
