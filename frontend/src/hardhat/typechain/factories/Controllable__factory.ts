/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { Controllable } from "../Controllable";

export class Controllable__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(controllers: string[], overrides?: Overrides): Promise<Controllable> {
    return super.deploy(controllers, overrides || {}) as Promise<Controllable>;
  }
  getDeployTransaction(
    controllers: string[],
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(controllers, overrides || {});
  }
  attach(address: string): Controllable {
    return super.attach(address) as Controllable;
  }
  connect(signer: Signer): Controllable__factory {
    return super.connect(signer) as Controllable__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Controllable {
    return new Contract(address, _abi, signerOrProvider) as Controllable;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "controllers",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "controllers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "adr",
        type: "address",
      },
    ],
    name: "isController",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "operators",
        type: "address[]",
      },
    ],
    name: "setControllers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516106103803806106108339818101604052602081101561003357600080fd5b810190808051604051939291908464010000000082111561005357600080fd5b90830190602082018581111561006857600080fd5b825186602082028301116401000000008211171561008557600080fd5b82525081516020918201928201910280838360005b838110156100b257818101518382015260200161009a565b505050509050016040525050506100ce816100d460201b60201c565b50610219565b60005b60005481101561012f576000600160008084815481106100f357fe5b6000918252602080832091909101546001600160a01b031683528201929092526040019020805460ff19169115159190911790556001016100d7565b5060005b815181101561018757600180600084848151811061014d57fe5b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055600101610133565b50805161019b90600090602084019061019f565b5050565b8280548282559060005260206000209081019282156101f4579160200282015b828111156101f457825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906101bf565b50610200929150610204565b5090565b5b808211156102005760008155600101610205565b6103e8806102286000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80637cc0c3a714610046578063b429afeb1461009e578063ea74838a146100d8575b600080fd5b61004e610148565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561008a578181015183820152602001610072565b505050509050019250505060405180910390f35b6100c4600480360360208110156100b457600080fd5b50356001600160a01b03166101aa565b604080519115158252519081900360200190f35b610146600480360360208110156100ee57600080fd5b810190602081018135600160201b81111561010857600080fd5b82018360208201111561011a57600080fd5b803590602001918460208302840111600160201b8311171561013b57600080fd5b5090925090506101c8565b005b606060008054806020026020016040519081016040528092919081815260200182805480156101a057602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610182575b5050505050905090565b6001600160a01b031660009081526001602052604090205460ff1690565b6101d1336101aa565b61021e576040805162461bcd60e51b815260206004820152601960248201527836b9b39739b2b73232b9103737ba1031b7b73a3937b63632b960391b604482015290519081900360640190fd5b61025a82828080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061025e92505050565b5050565b60005b6000548110156102b95760006001600080848154811061027d57fe5b6000918252602080832091909101546001600160a01b031683528201929092526040019020805460ff1916911515919091179055600101610261565b5060005b81518110156103115760018060008484815181106102d757fe5b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790556001016102bd565b5080516000805482825581805261025a927f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5639182019160208601821561038d579160200282015b8281111561038d57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610358565b5061039992915061039d565b5090565b5b80821115610399576000815560010161039e56fea264697066735822122001f12d345379d882b9b71fc3161dfb5fdd5acd0da847f663e3d65c16208b378964736f6c63430007030033";
