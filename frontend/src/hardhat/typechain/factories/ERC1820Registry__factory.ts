/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { ERC1820Registry } from "../ERC1820Registry";

export class ERC1820Registry__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<ERC1820Registry> {
    return super.deploy(overrides || {}) as Promise<ERC1820Registry>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC1820Registry {
    return super.attach(address) as ERC1820Registry;
  }
  connect(signer: Signer): ERC1820Registry__factory {
    return super.connect(signer) as ERC1820Registry__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1820Registry {
    return new Contract(address, _abi, signerOrProvider) as ERC1820Registry;
  }
}

const _abi = [
  {
    constant: false,
    inputs: [
      {
        name: "_addr",
        type: "address",
      },
      {
        name: "_interfaceHash",
        type: "bytes32",
      },
      {
        name: "_implementer",
        type: "address",
      },
    ],
    name: "setInterfaceImplementer",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "_addr",
        type: "address",
      },
    ],
    name: "getManager",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_addr",
        type: "address",
      },
      {
        name: "_newManager",
        type: "address",
      },
    ],
    name: "setManager",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "_interfaceName",
        type: "string",
      },
    ],
    name: "interfaceHash",
    outputs: [
      {
        name: "",
        type: "bytes32",
      },
    ],
    payable: false,
    stateMutability: "pure",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_contract",
        type: "address",
      },
      {
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "updateERC165Cache",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "_addr",
        type: "address",
      },
      {
        name: "_interfaceHash",
        type: "bytes32",
      },
    ],
    name: "getInterfaceImplementer",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "_contract",
        type: "address",
      },
      {
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "implementsERC165InterfaceNoCache",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "_contract",
        type: "address",
      },
      {
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "implementsERC165Interface",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "addr",
        type: "address",
      },
      {
        indexed: true,
        name: "interfaceHash",
        type: "bytes32",
      },
      {
        indexed: true,
        name: "implementer",
        type: "address",
      },
    ],
    name: "InterfaceImplementerSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "addr",
        type: "address",
      },
      {
        indexed: true,
        name: "newManager",
        type: "address",
      },
    ],
    name: "ManagerChanged",
    type: "event",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610904806100206000396000f3fe608060405234801561001057600080fd5b506004361061007b5760e060020a600035046329965a1d81146100805780633d584063146100b85780635df8122f146100fa57806365ba36c114610128578063a41e7d51146101aa578063aabbb8ca146101e0578063b70567651461020c578063f712f3e814610256575b600080fd5b6100b66004803603606081101561009657600080fd5b50600160a060020a0381358116916020810135916040909101351661028c565b005b6100de600480360360208110156100ce57600080fd5b5035600160a060020a0316610515565b60408051600160a060020a039092168252519081900360200190f35b6100b66004803603604081101561011057600080fd5b50600160a060020a0381358116916020013516610561565b6101986004803603602081101561013e57600080fd5b81019060208101813564010000000081111561015957600080fd5b82018360208201111561016b57600080fd5b8035906020019184600183028401116401000000008311171561018d57600080fd5b509092509050610640565b60408051918252519081900360200190f35b6100b6600480360360408110156101c057600080fd5b508035600160a060020a03169060200135600160e060020a03191661067b565b6100de600480360360408110156101f657600080fd5b50600160a060020a0381351690602001356106f8565b6102426004803603604081101561022257600080fd5b508035600160a060020a03169060200135600160e060020a03191661076f565b604080519115158252519081900360200190f35b6102426004803603604081101561026c57600080fd5b508035600160a060020a03169060200135600160e060020a031916610814565b6000600160a060020a038416156102a357836102a5565b335b9050336102b182610515565b600160a060020a031614610304576040805160e560020a62461bcd02815260206004820152600f6024820152608960020a6e2737ba103a34329036b0b730b3b2b902604482015290519081900360640190fd5b61030d83610894565b15610362576040805160e560020a62461bcd02815260206004820152601a60248201527f4d757374206e6f7420626520616e204552433136352068617368000000000000604482015290519081900360640190fd5b600160a060020a038216158015906103835750600160a060020a0382163314155b156104b15760405160200180807f455243313832305f4143434550545f4d4147494300000000000000000000000081525060140190506040516020818303038152906040528051906020012082600160a060020a031663249cb3fa85846040518363ffffffff1660e060020a0281526004018083815260200182600160a060020a0316600160a060020a031681526020019250505060206040518083038186803b15801561043057600080fd5b505afa158015610444573d6000803e3d6000fd5b505050506040513d602081101561045a57600080fd5b5051146104b1576040805160e560020a62461bcd02815260206004820181905260248201527f446f6573206e6f7420696d706c656d656e742074686520696e74657266616365604482015290519081900360640190fd5b600160a060020a038181166000818152602081815260408083208884529091528082208054600160a060020a0319169487169485179055518692917f93baa6efbd2244243bfee6ce4cfdd1d04fc4c0e9a786abd3a41313bd352db15391a450505050565b600160a060020a03818116600090815260016020526040812054909116151561053f57508061055c565b50600160a060020a03808216600090815260016020526040902054165b919050565b3361056b83610515565b600160a060020a0316146105be576040805160e560020a62461bcd02815260206004820152600f6024820152608960020a6e2737ba103a34329036b0b730b3b2b902604482015290519081900360640190fd5b81600160a060020a031681600160a060020a0316146105dd57806105e0565b60005b600160a060020a038381166000818152600160205260408082208054600160a060020a0319169585169590951790945592519184169290917f605c2dbf762e5f7d60a546d42e7205dcb1b011ebc62a61736a57c9089d3a43509190a35050565b600082826040516020018083838082843780830192505050925050506040516020818303038152906040528051906020012090505b92915050565b610685828261076f565b610690576000610692565b815b600160a060020a03928316600081815260208181526040808320600160e060020a0319969096168084529582528083208054600160a060020a0319169590971694909417909555908152600284528181209281529190925220805460ff19166001179055565b600080600160a060020a038416156107105783610712565b335b905061071d83610894565b15610743578261072d8282610814565b61073857600061073a565b815b92505050610675565b600160a060020a0390811660009081526020818152604080832086845290915290205416905092915050565b600080806107878560e060020a6301ffc9a7026108a1565b9092509050811580610797575080155b156107a757600092505050610675565b6107b985600160e060020a03196108a1565b90925090508115806107ca57508015155b156107da57600092505050610675565b6107e485856108a1565b90925090506001821480156107f95750806001145b1561080957600192505050610675565b506000949350505050565b600160a060020a0382166000908152600260209081526040808320600160e060020a03198516845290915281205460ff16151561085c57610855838361076f565b9050610675565b50600160a060020a03808316600081815260208181526040808320600160e060020a0319871684529091529020549091161492915050565b600160e060020a03161590565b60405160e060020a6301ffc9a7028082526004820183905260009182919060208160248189617530fa90519096909550935050505056fea165627a7a72305820d870d52f438198ff7721c2535bcd9c6bcde8c5f8a91eaeb134ec4e4db6d85c1f0029";
