/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { ERC20Burnable } from "../ERC20Burnable";

export class ERC20Burnable__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<ERC20Burnable> {
    return super.deploy(overrides || {}) as Promise<ERC20Burnable>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC20Burnable {
    return super.attach(address) as ERC20Burnable;
  }
  connect(signer: Signer): ERC20Burnable__factory {
    return super.connect(signer) as ERC20Burnable__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20Burnable {
    return new Contract(address, _abi, signerOrProvider) as ERC20Burnable;
  }
}

const _abi = [
  {
    constant: false,
    inputs: [
      {
        name: "spender",
        type: "address",
      },
      {
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "from",
        type: "address",
      },
      {
        name: "to",
        type: "address",
      },
      {
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "spender",
        type: "address",
      },
      {
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "value",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "from",
        type: "address",
      },
      {
        name: "value",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "spender",
        type: "address",
      },
      {
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "to",
        type: "address",
      },
      {
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "owner",
        type: "address",
      },
      {
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610772806100206000396000f3fe608060405234801561001057600080fd5b50600436106100915760e060020a6000350463095ea7b3811461009657806318160ddd146100d657806323b872dd146100f0578063395093511461012657806342966c681461015257806370a082311461017157806379cc679014610197578063a457c2d7146101c3578063a9059cbb146101ef578063dd62ed3e1461021b575b600080fd5b6100c2600480360360408110156100ac57600080fd5b50600160a060020a038135169060200135610249565b604080519115158252519081900360200190f35b6100de6102b5565b60408051918252519081900360200190f35b6100c26004803603606081101561010657600080fd5b50600160a060020a038135811691602081013590911690604001356102bb565b6100c26004803603604081101561013c57600080fd5b50600160a060020a038135169060200135610372565b61016f6004803603602081101561016857600080fd5b5035610410565b005b6100de6004803603602081101561018757600080fd5b5035600160a060020a031661041d565b61016f600480360360408110156101ad57600080fd5b50600160a060020a038135169060200135610438565b6100c2600480360360408110156101d957600080fd5b50600160a060020a038135169060200135610446565b6100c26004803603604081101561020557600080fd5b50600160a060020a038135169060200135610491565b6100de6004803603604081101561023157600080fd5b50600160a060020a03813581169160200135166104a7565b6000600160a060020a038316151561026057600080fd5b336000818152600160209081526040808320600160a060020a0388168085529083529281902086905580518681529051929392600080516020610727833981519152929181900390910190a350600192915050565b60025490565b600160a060020a03831660009081526001602090815260408083203384529091528120546102ef908363ffffffff6104d216565b600160a060020a038516600090815260016020908152604080832033845290915290205561031e8484846104e7565b600160a060020a038416600081815260016020908152604080832033808552908352928190205481519081529051929392600080516020610727833981519152929181900390910190a35060019392505050565b6000600160a060020a038316151561038957600080fd5b336000908152600160209081526040808320600160a060020a03871684529091529020546103bd908363ffffffff6105b416565b336000818152600160209081526040808320600160a060020a038916808552908352928190208590558051948552519193600080516020610727833981519152929081900390910190a350600192915050565b61041a33826105cd565b50565b600160a060020a031660009081526020819052604090205490565b6104428282610676565b5050565b6000600160a060020a038316151561045d57600080fd5b336000908152600160209081526040808320600160a060020a03871684529091529020546103bd908363ffffffff6104d216565b600061049e3384846104e7565b50600192915050565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b6000828211156104e157600080fd5b50900390565b600160a060020a03821615156104fc57600080fd5b600160a060020a038316600090815260208190526040902054610525908263ffffffff6104d216565b600160a060020a03808516600090815260208190526040808220939093559084168152205461055a908263ffffffff6105b416565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000828201838110156105c657600080fd5b9392505050565b600160a060020a03821615156105e257600080fd5b6002546105f5908263ffffffff6104d216565b600255600160a060020a038216600090815260208190526040902054610621908263ffffffff6104d216565b600160a060020a038316600081815260208181526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b600160a060020a03821660009081526001602090815260408083203384529091529020546106aa908263ffffffff6104d216565b600160a060020a03831660009081526001602090815260408083203384529091529020556106d882826105cd565b600160a060020a038216600081815260016020908152604080832033808552908352928190205481519081529051929392600080516020610727833981519152929181900390910190a3505056fe8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925a165627a7a72305820540f757e2ced4cc3dfc76a90096959a978556defaf3de5431377a18055feee3a0029";
