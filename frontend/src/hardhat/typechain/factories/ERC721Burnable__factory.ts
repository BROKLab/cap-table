/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { ERC721Burnable } from "../ERC721Burnable";

export class ERC721Burnable__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<ERC721Burnable> {
    return super.deploy(overrides || {}) as Promise<ERC721Burnable>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC721Burnable {
    return super.attach(address) as ERC721Burnable;
  }
  connect(signer: Signer): ERC721Burnable__factory {
    return super.connect(signer) as ERC721Burnable__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721Burnable {
    return new Contract(address, _abi, signerOrProvider) as ERC721Burnable;
  }
}

const _abi = [
  {
    constant: true,
    inputs: [
      {
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "to",
        type: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "from",
        type: "address",
      },
      {
        name: "to",
        type: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "from",
        type: "address",
      },
      {
        name: "to",
        type: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "to",
        type: "address",
      },
      {
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "from",
        type: "address",
      },
      {
        name: "to",
        type: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
      },
      {
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "owner",
        type: "address",
      },
      {
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
];

const _bytecode =
  "0x60806040526100367f01ffc9a70000000000000000000000000000000000000000000000000000000064010000000061006d810204565b6100687f80ac58cd0000000000000000000000000000000000000000000000000000000064010000000061006d810204565b6100d9565b7fffffffff00000000000000000000000000000000000000000000000000000000808216141561009c57600080fd5b7fffffffff00000000000000000000000000000000000000000000000000000000166000908152602081905260409020805460ff19166001179055565b610a0a806100e86000396000f3fe608060405234801561001057600080fd5b506004361061009c5760e060020a600035046301ffc9a781146100a1578063081812fc146100dc578063095ea7b31461011557806323b872dd1461014357806342842e0e1461017957806342966c68146101af5780636352211e146101cc57806370a08231146101e9578063a22cb46514610221578063b88d4fde1461024f578063e985e9c514610315575b600080fd5b6100c8600480360360208110156100b757600080fd5b5035600160e060020a031916610343565b604080519115158252519081900360200190f35b6100f9600480360360208110156100f257600080fd5b5035610362565b60408051600160a060020a039092168252519081900360200190f35b6101416004803603604081101561012b57600080fd5b50600160a060020a038135169060200135610394565b005b6101416004803603606081101561015957600080fd5b50600160a060020a0381358116916020810135909116906040013561043d565b6101416004803603606081101561018f57600080fd5b50600160a060020a03813581169160208101359091169060400135610462565b610141600480360360208110156101c557600080fd5b503561047e565b6100f9600480360360208110156101e257600080fd5b503561049f565b61020f600480360360208110156101ff57600080fd5b5035600160a060020a03166104c9565b60408051918252519081900360200190f35b6101416004803603604081101561023757600080fd5b50600160a060020a03813516906020013515156104fc565b6101416004803603608081101561026557600080fd5b600160a060020a038235811692602081013590911691604082013591908101906080810160608201356401000000008111156102a057600080fd5b8201836020820111156102b257600080fd5b803590602001918460018302840111640100000000831117156102d457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610580945050505050565b6100c86004803603604081101561032b57600080fd5b50600160a060020a03813581169160200135166105a8565b600160e060020a03191660009081526020819052604090205460ff1690565b600061036d826105d6565b151561037857600080fd5b50600090815260026020526040902054600160a060020a031690565b600061039f8261049f565b9050600160a060020a0383811690821614156103ba57600080fd5b33600160a060020a03821614806103d657506103d681336105a8565b15156103e157600080fd5b6000828152600260205260408082208054600160a060020a031916600160a060020a0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b61044733826105f3565b151561045257600080fd5b61045d838383610652565b505050565b61045d8383836020604051908101604052806000815250610580565b61048833826105f3565b151561049357600080fd5b61049c81610761565b50565b600081815260016020526040812054600160a060020a03168015156104c357600080fd5b92915050565b6000600160a060020a03821615156104e057600080fd5b50600160a060020a031660009081526003602052604090205490565b600160a060020a03821633141561051257600080fd5b336000818152600460209081526040808320600160a060020a03871680855290835292819020805460ff1916861515908117909155815190815290519293927f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31929181900390910190a35050565b61058b84848461043d565b61059784848484610773565b15156105a257600080fd5b50505050565b600160a060020a03918216600090815260046020908152604080832093909416825291909152205460ff1690565b600090815260016020526040902054600160a060020a0316151590565b6000806105ff8361049f565b905080600160a060020a031684600160a060020a0316148061063a575083600160a060020a031661062f84610362565b600160a060020a0316145b8061064a575061064a81856105a8565b949350505050565b82600160a060020a03166106658261049f565b600160a060020a03161461067857600080fd5b600160a060020a038216151561068d57600080fd5b610696816108ae565b600160a060020a0383166000908152600360205260409020546106c090600163ffffffff6108e916565b600160a060020a0380851660009081526003602052604080822093909355908416815220546106f690600163ffffffff6108fe16565b600160a060020a03808416600081815260036020908152604080832095909555858252600190528381208054600160a060020a031916831790559251849391928716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b61049c61076d8261049f565b82610917565b600061078784600160a060020a03166109d6565b15156107955750600161064a565b60405160e160020a630a85bd010281523360048201818152600160a060020a03888116602485015260448401879052608060648501908152865160848601528651600095928a169463150b7a029490938c938b938b939260a4019060208501908083838e5b838110156108125781810151838201526020016107fa565b50505050905090810190601f16801561083f5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561086157600080fd5b505af1158015610875573d6000803e3d6000fd5b505050506040513d602081101561088b57600080fd5b5051600160e060020a03191660e160020a630a85bd010214915050949350505050565b600081815260026020526040902054600160a060020a03161561049c5760009081526002602052604090208054600160a060020a0319169055565b6000828211156108f857600080fd5b50900390565b60008282018381101561091057600080fd5b9392505050565b81600160a060020a031661092a8261049f565b600160a060020a03161461093d57600080fd5b610946816108ae565b600160a060020a03821660009081526003602052604090205461097090600163ffffffff6108e916565b600160a060020a038316600081815260036020908152604080832094909455848252600190528281208054600160a060020a03191690559151839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6000903b119056fea165627a7a723058204854ac813d46c0a6c463d9fd8e50d878e4c7fa61e545fb49aea4793add3bfcba0029";
