/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { ERC721 } from "../ERC721";

export class ERC721__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<ERC721> {
    return super.deploy(overrides || {}) as Promise<ERC721>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC721 {
    return super.attach(address) as ERC721;
  }
  connect(signer: Signer): ERC721__factory {
    return super.connect(signer) as ERC721__factory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ERC721 {
    return new Contract(address, _abi, signerOrProvider) as ERC721;
  }
}

const _abi = [
  {
    constant: true,
    inputs: [
      {
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "to",
        type: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "from",
        type: "address",
      },
      {
        name: "to",
        type: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "from",
        type: "address",
      },
      {
        name: "to",
        type: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "to",
        type: "address",
      },
      {
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "from",
        type: "address",
      },
      {
        name: "to",
        type: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
      },
      {
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "owner",
        type: "address",
      },
      {
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506100437f01ffc9a70000000000000000000000000000000000000000000000000000000064010000000061007a810204565b6100757f80ac58cd0000000000000000000000000000000000000000000000000000000064010000000061007a810204565b6100e6565b7fffffffff0000000000000000000000000000000000000000000000000000000080821614156100a957600080fd5b7fffffffff00000000000000000000000000000000000000000000000000000000166000908152602081905260409020805460ff19166001179055565b6108f2806100f56000396000f3fe608060405234801561001057600080fd5b50600436106100915760e060020a600035046301ffc9a78114610096578063081812fc146100d1578063095ea7b31461010a57806323b872dd1461013857806342842e0e1461016e5780636352211e146101a457806370a08231146101c1578063a22cb465146101f9578063b88d4fde14610227578063e985e9c5146102ed575b600080fd5b6100bd600480360360208110156100ac57600080fd5b5035600160e060020a03191661031b565b604080519115158252519081900360200190f35b6100ee600480360360208110156100e757600080fd5b503561033a565b60408051600160a060020a039092168252519081900360200190f35b6101366004803603604081101561012057600080fd5b50600160a060020a03813516906020013561036c565b005b6101366004803603606081101561014e57600080fd5b50600160a060020a03813581169160208101359091169060400135610415565b6101366004803603606081101561018457600080fd5b50600160a060020a0381358116916020810135909116906040013561043a565b6100ee600480360360208110156101ba57600080fd5b5035610456565b6101e7600480360360208110156101d757600080fd5b5035600160a060020a0316610480565b60408051918252519081900360200190f35b6101366004803603604081101561020f57600080fd5b50600160a060020a03813516906020013515156104b3565b6101366004803603608081101561023d57600080fd5b600160a060020a0382358116926020810135909116916040820135919081019060808101606082013564010000000081111561027857600080fd5b82018360208201111561028a57600080fd5b803590602001918460018302840111640100000000831117156102ac57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610537945050505050565b6100bd6004803603604081101561030357600080fd5b50600160a060020a038135811691602001351661055f565b600160e060020a03191660009081526020819052604090205460ff1690565b60006103458261058d565b151561035057600080fd5b50600090815260026020526040902054600160a060020a031690565b600061037782610456565b9050600160a060020a03838116908216141561039257600080fd5b33600160a060020a03821614806103ae57506103ae813361055f565b15156103b957600080fd5b6000828152600260205260408082208054600160a060020a031916600160a060020a0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b61041f33826105aa565b151561042a57600080fd5b610435838383610609565b505050565b6104358383836020604051908101604052806000815250610537565b600081815260016020526040812054600160a060020a031680151561047a57600080fd5b92915050565b6000600160a060020a038216151561049757600080fd5b50600160a060020a031660009081526003602052604090205490565b600160a060020a0382163314156104c957600080fd5b336000818152600460209081526040808320600160a060020a03871680855290835292819020805460ff1916861515908117909155815190815290519293927f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31929181900390910190a35050565b610542848484610415565b61054e84848484610718565b151561055957600080fd5b50505050565b600160a060020a03918216600090815260046020908152604080832093909416825291909152205460ff1690565b600090815260016020526040902054600160a060020a0316151590565b6000806105b683610456565b905080600160a060020a031684600160a060020a031614806105f1575083600160a060020a03166105e68461033a565b600160a060020a0316145b806106015750610601818561055f565b949350505050565b82600160a060020a031661061c82610456565b600160a060020a03161461062f57600080fd5b600160a060020a038216151561064457600080fd5b61064d81610853565b600160a060020a03831660009081526003602052604090205461067790600163ffffffff61089016565b600160a060020a0380851660009081526003602052604080822093909355908416815220546106ad90600163ffffffff6108a516565b600160a060020a03808416600081815260036020908152604080832095909555858252600190528381208054600160a060020a031916831790559251849391928716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600061072c84600160a060020a03166108be565b151561073a57506001610601565b60405160e160020a630a85bd010281523360048201818152600160a060020a03888116602485015260448401879052608060648501908152865160848601528651600095928a169463150b7a029490938c938b938b939260a4019060208501908083838e5b838110156107b757818101518382015260200161079f565b50505050905090810190601f1680156107e45780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561080657600080fd5b505af115801561081a573d6000803e3d6000fd5b505050506040513d602081101561083057600080fd5b5051600160e060020a03191660e160020a630a85bd010214915050949350505050565b600081815260026020526040902054600160a060020a03161561088d5760008181526002602052604090208054600160a060020a03191690555b50565b60008282111561089f57600080fd5b50900390565b6000828201838110156108b757600080fd5b9392505050565b6000903b119056fea165627a7a723058205c78a806ce56ef24b44d3764cb7563ae0938745e97092367fff67c250854f0870029";
