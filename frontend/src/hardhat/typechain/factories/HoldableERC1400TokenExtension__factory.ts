/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer } from "ethers";
import { Provider } from "@ethersproject/providers";

import type { HoldableERC1400TokenExtension } from "../HoldableERC1400TokenExtension";

export class HoldableERC1400TokenExtension__factory {
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HoldableERC1400TokenExtension {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as HoldableERC1400TokenExtension;
  }
}

const _abi = [
  {
    constant: true,
    inputs: [
      {
        name: "token",
        type: "address",
      },
      {
        name: "holdId",
        type: "bytes32",
      },
    ],
    name: "retrieveHoldData",
    outputs: [
      {
        name: "partition",
        type: "bytes32",
      },
      {
        name: "sender",
        type: "address",
      },
      {
        name: "recipient",
        type: "address",
      },
      {
        name: "notary",
        type: "address",
      },
      {
        name: "value",
        type: "uint256",
      },
      {
        name: "expiration",
        type: "uint256",
      },
      {
        name: "secretHash",
        type: "bytes32",
      },
      {
        name: "secret",
        type: "bytes32",
      },
      {
        name: "status",
        type: "uint8",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "token",
        type: "address",
      },
      {
        name: "holdId",
        type: "bytes32",
      },
      {
        name: "value",
        type: "uint256",
      },
      {
        name: "lockPreimage",
        type: "bytes32",
      },
    ],
    name: "executeHold",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
];
