/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { PauserMock } from "../PauserMock";

export class PauserMock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(token: string, overrides?: Overrides): Promise<PauserMock> {
    return super.deploy(token, overrides || {}) as Promise<PauserMock>;
  }
  getDeployTransaction(
    token: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(token, overrides || {});
  }
  attach(address: string): PauserMock {
    return super.attach(address) as PauserMock;
  }
  connect(signer: Signer): PauserMock__factory {
    return super.connect(signer) as PauserMock__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PauserMock {
    return new Contract(address, _abi, signerOrProvider) as PauserMock;
  }
}

const _abi = [
  {
    constant: true,
    inputs: [
      {
        name: "token",
        type: "address",
      },
      {
        name: "account",
        type: "address",
      },
    ],
    name: "isPauser",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "token",
        type: "address",
      },
    ],
    name: "renouncePauser",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "token",
        type: "address",
      },
      {
        name: "mockActivated",
        type: "bool",
      },
    ],
    name: "mockFunction",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "token",
        type: "address",
      },
      {
        name: "account",
        type: "address",
      },
    ],
    name: "addPauser",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "token",
        type: "address",
      },
      {
        name: "account",
        type: "address",
      },
    ],
    name: "removePauser",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        name: "token",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        name: "account",
        type: "address",
      },
    ],
    name: "PauserAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        name: "account",
        type: "address",
      },
    ],
    name: "PauserRemoved",
    type: "event",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405160208061052f8339810180604052602081101561003057600080fd5b5051610045813364010000000061004b810204565b5061014c565b600160a060020a038216600090815260208190526040902061007a908264010000000061035a6100be82021704565b80600160a060020a031682600160a060020a03167fe0953c403a52f9dc1fef4202a8d33975c958b727bee0d7b5b328965ddad98d8160405160405180910390a35050565b600160a060020a03811615156100d357600080fd5b6100e68282640100000000610115810204565b156100f057600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b6000600160a060020a038216151561012c57600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b6103d48061015b6000396000f3fe608060405234801561001057600080fd5b506004361061005a5760e060020a60003504632fd33398811461005f57806341eb24bb146100a15780636c41d4ea146100c9578063eb5314bd146100f7578063ed2f909514610125575b600080fd5b61008d6004803603604081101561007557600080fd5b50600160a060020a0381358116916020013516610153565b604080519115158252519081900360200190f35b6100c7600480360360208110156100b757600080fd5b5035600160a060020a0316610182565b005b6100c7600480360360408110156100df57600080fd5b50600160a060020a038135169060200135151561018f565b6100c76004803603604081101561010d57600080fd5b50600160a060020a03813581169160200135166101ba565b6100c76004803603604081101561013b57600080fd5b50600160a060020a03813581169160200135166101df565b600160a060020a038216600090815260208190526040812061017b908363ffffffff6101ff16565b9392505050565b61018c8133610236565b50565b8161019a8133610153565b15156101a557600080fd5b506001805460ff191691151591909117905550565b816101c58133610153565b15156101d057600080fd5b6101da83836102a2565b505050565b816101ea8133610153565b15156101f557600080fd5b6101da8383610236565b6000600160a060020a038216151561021657600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b600160a060020a038216600090815260208190526040902061025e908263ffffffff61030e16565b80600160a060020a031682600160a060020a03167fb75903ade4a0fdb07d60c882c22c779e2e1c751883c37aecdcc92a8ec72b046e60405160405180910390a35050565b600160a060020a03821660009081526020819052604090206102ca908263ffffffff61035a16565b80600160a060020a031682600160a060020a03167fe0953c403a52f9dc1fef4202a8d33975c958b727bee0d7b5b328965ddad98d8160405160405180910390a35050565b600160a060020a038116151561032357600080fd5b61032d82826101ff565b151561033857600080fd5b600160a060020a0316600090815260209190915260409020805460ff19169055565b600160a060020a038116151561036f57600080fd5b61037982826101ff565b1561038357600080fd5b600160a060020a0316600090815260209190915260409020805460ff1916600117905556fea165627a7a7230582003fc22e6e4a5a6a8b7ef5001ed4764b1ecf379c21f52fa68c810b4c39f61108c0029";
